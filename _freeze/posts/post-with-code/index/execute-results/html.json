{
  "hash": "a86e69bc63e935312a2fa5b2f847402b",
  "result": {
    "markdown": "---\ntitle: \"Detect date and time variables with openxlsx\"\nauthor: \"Layal C. Lettry\"\ndate: \"2023-10-07\"\ncategories: [code, openxlsx]\nimage: \"image.jpg\"\n---\n\n\n# Detect date variables\n\nWhen you try to read an excel file, the dates don't always look the way you would expect. You may see a vector of integers (or doubles) rather than a vector of dates. If you are using [openxlsx](https://github.com/ycphs/openxlsx), you can set `detectDates = TRUE` in the function `read.xlsx()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(openxlsx)\nlibrary(tidyverse)\nlibrary(readxl)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nxlsxfile_path <- system.file(\"extdata\", \"readTest.xlsx\", package = \"openxlsx\")\n\n# Vector of doubles instead of dates\nxlsxfile_with_problems <- read.xlsx(xlsxfile_path, sheet = 3) |> \n  as_tibble()\nxlsxfile_with_problems\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,083 × 5\n    Date  value word      bool  wordZ2 \n   <dbl>  <dbl> <chr>     <lgl> <chr>  \n 1 41757  0.839 N-U-B-R-A FALSE FALSE-Z\n 2 41756  0.886 N-Z-P-S-Y TRUE  TRUE-Z \n 3 41755  0.574 C-G-D-X-H TRUE  TRUE-Z \n 4 41754  0.137 <NA>      FALSE FALSE-Z\n 5 41753  0.369 B-K-A-O-W TRUE  TRUE-Z \n 6 41752 NA     H-P-G-O-K TRUE  TRUE-Z \n 7 41751  0.842 F-P-C-L-T TRUE  TRUE-Z \n 8 41750  0.227 A-N-Q-P-V TRUE  TRUE-Z \n 9 41749  0.276 Y-E-B-K-O TRUE  TRUE-Z \n10 41748  0.419 V-S-N-T-R TRUE  TRUE-Z \n# ℹ 2,073 more rows\n```\n:::\n\n```{.r .cell-code}\nglimpse(xlsxfile_with_problems)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 2,083\nColumns: 5\n$ Date   <dbl> 41757, 41756, 41755, 41754, 41753, 41752, 41751, 41750, 41749, …\n$ value  <dbl> 0.839076400, 0.886380000, 0.574131400, 0.136606500, 0.369258200…\n$ word   <chr> \"N-U-B-R-A\", \"N-Z-P-S-Y\", \"C-G-D-X-H\", NA, \"B-K-A-O-W\", \"H-P-G-…\n$ bool   <lgl> FALSE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, T…\n$ wordZ2 <chr> \"FALSE-Z\", \"TRUE-Z\", \"TRUE-Z\", \"FALSE-Z\", \"TRUE-Z\", \"TRUE-Z\", \"…\n```\n:::\n\n```{.r .cell-code}\n# Vector of dates\nxlsxfile <- read.xlsx(xlsxfile_path, sheet = 3, detectDates = TRUE)  |> \n  as_tibble()\nxlsxfile\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,083 × 5\n   Date        value word      bool  wordZ2 \n   <date>      <dbl> <chr>     <lgl> <chr>  \n 1 2014-04-28  0.839 N-U-B-R-A FALSE FALSE-Z\n 2 2014-04-27  0.886 N-Z-P-S-Y TRUE  TRUE-Z \n 3 2014-04-26  0.574 C-G-D-X-H TRUE  TRUE-Z \n 4 2014-04-25  0.137 <NA>      FALSE FALSE-Z\n 5 2014-04-24  0.369 B-K-A-O-W TRUE  TRUE-Z \n 6 2014-04-23 NA     H-P-G-O-K TRUE  TRUE-Z \n 7 2014-04-22  0.842 F-P-C-L-T TRUE  TRUE-Z \n 8 2014-04-21  0.227 A-N-Q-P-V TRUE  TRUE-Z \n 9 2014-04-20  0.276 Y-E-B-K-O TRUE  TRUE-Z \n10 2014-04-19  0.419 V-S-N-T-R TRUE  TRUE-Z \n# ℹ 2,073 more rows\n```\n:::\n\n```{.r .cell-code}\nglimpse(xlsxfile)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 2,083\nColumns: 5\n$ Date   <date> 2014-04-28, 2014-04-27, 2014-04-26, 2014-04-25, 2014-04-24, 20…\n$ value  <dbl> 0.839076400, 0.886380000, 0.574131400, 0.136606500, 0.369258200…\n$ word   <chr> \"N-U-B-R-A\", \"N-Z-P-S-Y\", \"C-G-D-X-H\", NA, \"B-K-A-O-W\", \"H-P-G-…\n$ bool   <lgl> FALSE, TRUE, TRUE, FALSE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, T…\n$ wordZ2 <chr> \"FALSE-Z\", \"TRUE-Z\", \"TRUE-Z\", \"FALSE-Z\", \"TRUE-Z\", \"TRUE-Z\", \"…\n```\n:::\n:::\n\n\n# Convert double variables to date and time variables\n\nAnother way to convert a vector of integers is to use the function `convertToDate()` or `convertToDateTime()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nother_file <- readxl_example(path = \"type-me.xlsx\")\nxlsxfile_datetime <- read.xlsx(other_file, sheet = 3) |> \n  as_tibble() |> \n  slice(2:3) |> \n  select(`maybe.a.datetime?`) |> \n  pull()\nxlsxfile_datetime\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"41051\"              \"41026.479166666664\"\n```\n:::\n\n```{.r .cell-code}\nconvertToDate(xlsxfile_datetime[1])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2012-05-22\"\n```\n:::\n\n```{.r .cell-code}\nconvertToDateTime(xlsxfile_datetime[2])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2012-04-27 11:30:00 CEST\"\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}