---
title: What are the use cases of using nested versus packed data?
author:
  - name:
      given: Layal Christine
      family: Lettry
      orcid: 0009-0008-6396-0523
    affiliations:
      - id: cynkra
      - name: cynkra GmbH
        city: Zurich
        state: CH
      - id: unifr
      - name: University of Fribourg, Dept. of Informatics, ASAM Group
        city: Fribourg
        state: CH
date: 2024-05-30
categories: [nest, unnest, pack, unpack, tidyr, json, constructive]
image: image.jpg
citation: 
  url: https://rdiscovery.netlify.app/posts/2024-06-01_use-case-pack-nest/
format:
  html:
    toc: true
    toc-depth: 6
    toc-title: Contents
    toc-location: right
    number-sections: false
editor_options: 
  chunk_output_type: console
---

*When would you use nested instead packed data (and vice versa)?*

In my last [blog post](https://rdiscovery.netlify.app/posts/2024-05-30_pack-nest/), we could see what the difference was between the structure of nested data opposite to packed data. 

In this article, I would like to show when we could use nested and packed data.

*Nested data*

In the following example, we can nest data from the tibble `palmerpenguins::penguins` with the initial raw tibble `palmerpenguins::penguins_raw`.


```{r}
my_nested_tib <-
  palmerpenguins::penguins |>
  dplyr::distinct(island) |>
  dplyr::rename(my_island = island) |>
  dplyr::mutate(
    penguins_data = purrr::map(
      my_island, \(x) dplyr::filter(palmerpenguins::penguins, island == x)
    ),
    penguins_raw_data = purrr::map(
      my_island, \(x) dplyr::filter(palmerpenguins::penguins_raw, Island == x)
    )
  )

dplyr::glimpse(my_nested_tib)
```

We can see that `palmerpenguins::penguins` and `palmerpenguins::penguins_raw` have different dimensions. They have the same number of rows but a different number of columns.

To remove both lists from our tibble, we can unnest the columns `penguins_data` and `penguins_raw_data`.

```{r}
my_unnested_tib <-
  my_nested_tib |>
  tidyr::unnest(
    cols = c(penguins_data, penguins_raw_data)
  )
dplyr::glimpse(my_unnested_tib)
```
