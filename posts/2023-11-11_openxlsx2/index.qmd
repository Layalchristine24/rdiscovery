---
title: Analysis of the differences between openxlsx and openxlsx2
author:
  - name:
      given: Layal Christine
      family: Lettry
      orcid: 0009-0008-6396-0523
    affiliations:
      - id: cynkra
      - name: cynkra GmbH
        city: Zurich
        state: CH
      - id: unifr
      - name: University of Fribourg, Dept. of Informatics, ASAM Group
        city: Fribourg
        state: CH
date: 2023-11-11
categories: [openxlsx, openxlsx2]
image: image.jpg
citation: 
  url: https://rdiscovery.netlify.app/posts/2023-11-11_openxlsx2/
format:
  html:
    toc: true
    toc-title: Contents
    toc-location: right
    number-sections: false
---



*What are the main differences between [openxlsx](https://github.com/awalker89/openxlsx) and [openxlsx2](https://github.com/JanMarvin/openxlsx2)?*

### Introduction

Within this blog post, my aim is to elucidate the primary distinctions between [openxlsx](https://github.com/awalker89/openxlsx) and [openxlsx2](https://github.com/JanMarvin/openxlsx2). I've encountered these variances through a [Github Gist](https://gist.github.com/JanMarvin/a0d89bb8e128899477654dd2d4f4402d), the informative vignette titled ["Update from openxlsx"](https://janmarvin.github.io/openxlsx2/articles/Update-from-openxlsx.html), and my personal hands-on experience.

The provided tables are designed to offer a clear overview of the differences between openxlsx and openxlsx2. They serve as a concise presentation, illustrating the content of the vignette titled "Update from openxlsx," which can be explored in detail [here](https://janmarvin.github.io/openxlsx2/articles/Update-from-openxlsx.html).

### Chaining vs Piping

In contrast to openxlsx, openxlsx2 enables the creation of workbooks, the addition of styles, data writing, and other operations through the use of chained or piped operations.

If you lean towards utilizing pipes, please turn to the last column in the tables within the subsequent sections. This column specifies the corresponding function and its recommended usage with pipes. If the column is empty, it implies that the same function can be employed seamlessly with either pipes or chains.

Kindly explore [this specific vignette section](https://janmarvin.github.io/openxlsx2/articles/Update-from-openxlsx.html#styles) for an example that contrasts openxlsx and openxlsx2. Unlike openxlsx, which lacks integration with pipes or chains, openxlsx2 offers flexibility in its application.

### Read an existing Excel Workbook

```{r}
#| label: table_read_wb
#| tbl-cap: "Create a workbook and write data"
#| message: false
#| warning: false
#| echo: false

library(knitr)

table_read_wb <- tibble::tribble(
  ~Action,             ~openxlsx,                    ~`openxlsx2 Chained`, ~`openxlsx2 Piped`, 
  'Read xlsx or xlsm files', '',  '`wb_to_df(file = file)`', '',
  'Read xlsx or xlsm files', '`read.xlsx(xlsxFile = file)`',  '`read_xlsx(file = file)`','', 
  'Read xlsx or xlsm files', '`readWorkbook(xlsxFile = file)`',  '`wb_read(file = file)`','' 

)
```



```{r}
#| label: print_table_read_wb
#| tbl-cap: "Read an existing Excel workbook"
#| tbl-colwidths: [40,70,70,70]
#| echo: false
#| output: asis
kable(table_read_wb)

```

Please be aware that the recently introduced functions in openxlsx2, namely `read_xlsx()` and `wb_read()`, serve as mere wrappers for `wb_to_df()`. Their purpose is to facilitate a seamless transition between openxlsx and openxlsx2.

### Write a file (xlsx or xlsm)

```{r}
#| label: table_write_wb
#| tbl-cap: "Write an xlsx or xlsm workbook"
#| message: false
#| warning: false
#| echo: false

library(knitr)

table_write_wb <- tibble::tribble(
  ~Action,             ~openxlsx,                    ~`openxlsx2 Chained`, ~`openxlsx2 Piped`,
  'Create a temporary xlsx file', '`out <- temp_xlsx(name = "myxlsx")`', '`out2 <- temp_xlsx(name = "myxlsx")`', '', 
  'Write a xlsx file', '`write.xlsx(my_df, file = out, colNames = TRUE)`',  '`write_xlsx(my_df, file = out2, col_names = TRUE)`', '', 
  'Create a temporary xlsm file', '', '`out2_xlsm <- temp_xlsx(name = "myxlsm", macros = TRUE)`', '', 
  'Write a xlsm files', '',  '`write_xlsx(my_df, file = out2_xlsm, colNames = TRUE)`', ''
)
```


```{r}
#| label: print_table_write_wb
#| tbl-cap: "Write an xlsx or xlsm workbook"
#| tbl-colwidths: [40,70,70,70]
#| echo: false
#| output: asis
kable(table_write_wb)

```


### Create an Excel Workbook from Scratch

```{r}
#| label: table_create_wb
#| message: false
#| warning: false
#| echo: false

library(knitr)

table_create_wb <- tibble::tribble(
  ~Action,             ~openxlsx,                    ~`openxlsx2 Chained`, ~`openxlsx2 Piped`,
  'Create a workbook', '`wb <- createWorkbook()`',  '`wb <- wb_workbook()`', '', 
  'Add a worksheet "ws1"', '`ws1 <- addWorksheet(wb = wb, sheetName = "ws1")`', '`wb$add_worksheet("ws1")`', '`wb_add_worksheet("ws1")`',
  'Add data to "ws1"', '`writeData(wb = wb, sheet = "ws1", x = cars, startCol = 2)`', '`wb$add_data(x = cars, start_col = 2)`', '`wb_add_data(x = cars, start_col = 2)`'
)
```


```{r}
#| label: print_table_create_wb
#| tbl-cap: "Create a workbook and write data"
#| tbl-colwidths: [40,70,70,70]
#| echo: false
#| output: asis
kable(table_create_wb)

```


### Add 
