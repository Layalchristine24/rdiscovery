{
  "hash": "7f66c23a1fa17238d37e27e0147abc41",
  "result": {
    "markdown": "---\ntitle: Analysis of the differences between openxlsx and openxlsx2\nauthor:\n  - name:\n      given: Layal Christine\n      family: Lettry\n      orcid: 0009-0008-6396-0523\n    affiliations:\n      - id: cynkra\n      - name: cynkra GmbH\n        city: Zurich\n        state: CH\n      - id: unifr\n      - name: University of Fribourg, Dept. of Informatics, ASAM Group\n        city: Fribourg\n        state: CH\ndate: 2023-11-11\ncategories: [openxlsx, openxlsx2]\nimage: image.jpg\ncitation: \n  url: https://rdiscovery.netlify.app/posts/2023-11-11_openxlsx2/\nformat:\n  html:\n    toc: true\n    toc-title: Contents\n    toc-location: right\n    number-sections: false\n---\n\n\n*What are the main differences between [openxlsx](https://github.com/awalker89/openxlsx) and [openxlsx2](https://github.com/JanMarvin/openxlsx2)?*\n\n### Introduction\n\nWithin this blog post, my aim is to elucidate the primary distinctions between [openxlsx](https://github.com/awalker89/openxlsx) and [openxlsx2](https://github.com/JanMarvin/openxlsx2). I've encountered these variances through a [Github Gist](https://gist.github.com/JanMarvin/a0d89bb8e128899477654dd2d4f4402d), the informative vignette titled [\"Update from openxlsx\"](https://janmarvin.github.io/openxlsx2/articles/Update-from-openxlsx.html), and my personal hands-on experience.\n\nThe provided tables are designed to offer a clear overview of the differences between openxlsx and openxlsx2. They serve as a concise presentation, illustrating the content of the vignette titled \"Update from openxlsx,\" which can be explored in detail [here](https://janmarvin.github.io/openxlsx2/articles/Update-from-openxlsx.html).\n\n### Chaining vs Piping\n\nIn contrast to openxlsx, openxlsx2 enables the creation of workbooks, the addition of styles, data writing, and other operations through the use of chained or piped operations.\n\nIf you lean towards utilizing pipes, please turn to the last column in the tables within the subsequent sections. This column specifies the corresponding function and its recommended usage with pipes. If the function is the same in both columns, it can be used with pipes or chains.\n\nKindly explore [this specific vignette section](https://janmarvin.github.io/openxlsx2/articles/Update-from-openxlsx.html#styles) for an example that contrasts openxlsx and openxlsx2. Unlike openxlsx, which lacks integration with pipes or chains, openxlsx2 offers flexibility in its application.\n\n### Read an existing Excel Workbook\n\n\n::: {.cell tbl-cap='Create a workbook and write data'}\n\n:::\n\n\nPlease note that while openxlsx2 can read `xlsx` or `xlsm` files, openxlsx can only read `xlsx` files.\n\n\n::: {.cell tbl-cap='Read an existing Excel workbook' tbl-colwidths='[50,60,60,60]'}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n<tr>\n<th style=\"empty-cells: hide;border-bottom:hidden;\" colspan=\"1\"></th>\n<th style=\"empty-cells: hide;border-bottom:hidden;\" colspan=\"1\"></th>\n<th style=\"border-bottom:hidden;padding-bottom:0; padding-left:3px;padding-right:3px;text-align: center; \" colspan=\"2\"><div style=\"border-bottom: 1px solid #ddd; padding-bottom: 5px; \">openxlsx2</div></th>\n</tr>\n  <tr>\n   <th style=\"text-align:left;\"> Action </th>\n   <th style=\"text-align:left;\"> openxlsx </th>\n   <th style=\"text-align:left;\"> chain </th>\n   <th style=\"text-align:left;\"> pipe </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Load file </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> `wb_load()` </td>\n   <td style=\"text-align:left;\"> `wb_load()` </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Read file </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> `wb_to_df()` </td>\n   <td style=\"text-align:left;\"> `wb_to_df()` </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Read file </td>\n   <td style=\"text-align:left;\"> `read.xlsx()` </td>\n   <td style=\"text-align:left;\"> `read_xlsx()` </td>\n   <td style=\"text-align:left;\"> `read_xlsx()` </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Read file </td>\n   <td style=\"text-align:left;\"> `readWorkbook()` </td>\n   <td style=\"text-align:left;\"> `wb_read()` </td>\n   <td style=\"text-align:left;\"> `wb_read()` </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nPlease be aware that the recently introduced functions in openxlsx2, namely `read_xlsx()` and `wb_read()`, serve as mere wrappers for `wb_to_df()`. Their purpose is to facilitate a seamless transition between openxlsx and openxlsx2.\n\n### Write a file (xlsx or xlsm)\n\n\n::: {.cell tbl-cap='Write an xlsx or xlsm workbook'}\n\n:::\n\n::: {.cell tbl-cap='Write an xlsx or xlsm workbook' tbl-colwidths='[50,60,60,60]'}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n<tr>\n<th style=\"empty-cells: hide;border-bottom:hidden;\" colspan=\"1\"></th>\n<th style=\"empty-cells: hide;border-bottom:hidden;\" colspan=\"1\"></th>\n<th style=\"border-bottom:hidden;padding-bottom:0; padding-left:3px;padding-right:3px;text-align: center; \" colspan=\"2\"><div style=\"border-bottom: 1px solid #ddd; padding-bottom: 5px; \">openxlsx2</div></th>\n</tr>\n  <tr>\n   <th style=\"text-align:left;\"> Action </th>\n   <th style=\"text-align:left;\"> openxlsx </th>\n   <th style=\"text-align:left;\"> chain </th>\n   <th style=\"text-align:left;\"> pipe </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Create temporary xlsm file </td>\n   <td style=\"text-align:left;\">  </td>\n   <td style=\"text-align:left;\"> `temp_xlsx(macros = TRUE)` </td>\n   <td style=\"text-align:left;\"> `temp_xlsx(macros = TRUE)` </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Create temporary xlsx file </td>\n   <td style=\"text-align:left;\"> `temp_xlsx()` </td>\n   <td style=\"text-align:left;\"> `temp_xlsx()` </td>\n   <td style=\"text-align:left;\"> `temp_xlsx()` </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Write file </td>\n   <td style=\"text-align:left;\"> `write.xlsx()` </td>\n   <td style=\"text-align:left;\"> `write_xlsx()` </td>\n   <td style=\"text-align:left;\"> `write_xlsx()` </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n### Create an Excel Workbook from Scratch\n\nLet's say you would like to create a workbook called `wb` and a worksheet called `ws` where you want to write data `x`. \n\n\n::: {.cell}\n\n:::\n\n::: {.cell tbl-cap='Create a workbook and write data' tbl-colwidths='[50,60,60,60]'}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n<tr>\n<th style=\"empty-cells: hide;border-bottom:hidden;\" colspan=\"1\"></th>\n<th style=\"empty-cells: hide;border-bottom:hidden;\" colspan=\"1\"></th>\n<th style=\"border-bottom:hidden;padding-bottom:0; padding-left:3px;padding-right:3px;text-align: center; \" colspan=\"2\"><div style=\"border-bottom: 1px solid #ddd; padding-bottom: 5px; \">openxlsx2</div></th>\n</tr>\n  <tr>\n   <th style=\"text-align:left;\"> Action </th>\n   <th style=\"text-align:left;\"> openxlsx </th>\n   <th style=\"text-align:left;\"> chain </th>\n   <th style=\"text-align:left;\"> pipe </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Create workbook </td>\n   <td style=\"text-align:left;\"> `createWorkbook()` </td>\n   <td style=\"text-align:left;\"> `wb_workbook()` </td>\n   <td style=\"text-align:left;\"> `wb_workbook()` </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Add worksheet </td>\n   <td style=\"text-align:left;\"> `addWorksheet(wb, ws)` </td>\n   <td style=\"text-align:left;\"> `wb$add_worksheet(ws)` </td>\n   <td style=\"text-align:left;\"> `wb_add_worksheet(ws)` </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Add data to worksheet </td>\n   <td style=\"text-align:left;\"> `writeData(wb, ws, x)` </td>\n   <td style=\"text-align:left;\"> `wb$add_data(x)` </td>\n   <td style=\"text-align:left;\"> `wb_add_data(x)` </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Inspect workbook </td>\n   <td style=\"text-align:left;\"> `openXL(wb)` </td>\n   <td style=\"text-align:left;\"> `wb$open()` </td>\n   <td style=\"text-align:left;\"> `wb_open()` </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n#### Example\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(openxlsx2)\n# With Pipes\nwb <- wb_workbook(creator = \"Layal Christine Lettry\",\n  title = \"My Test\",\n  subject = \"Create a Workbook\",\n  category = \"Test\",\n  datetime_created = Sys.time(),\n  theme = \"Office Theme\",\n  keywords = \"test\",\n  comments = \"This is my test\",\n  manager = \"Me\",\n  company = \"My Company\") \n```\n:::\n\n\n### Add \n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}