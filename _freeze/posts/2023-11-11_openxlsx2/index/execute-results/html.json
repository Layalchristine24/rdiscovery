{
  "hash": "3bee1d5e2e71f4f1da8740e340347281",
  "result": {
    "markdown": "---\ntitle: Analysis of the differences between openxlsx and openxlsx2\nauthor:\n  - name:\n      given: Layal Christine\n      family: Lettry\n      orcid: 0009-0008-6396-0523\n    affiliations:\n      - id: cynkra\n      - name: cynkra GmbH\n        city: Zurich\n        state: CH\n      - id: unifr\n      - name: University of Fribourg, Dept. of Informatics, ASAM Group\n        city: Fribourg\n        state: CH\ndate: 2023-11-11\ncategories: [openxlsx, openxlsx2]\nimage: image.jpg\ncitation: \n  url: https://rdiscovery.netlify.app/posts/2023-11-11_openxlsx2/\nformat:\n  html:\n    toc: true\n    toc-title: Contents\n    toc-location: right\n    number-sections: false\n---\n\n\n\n\n*What are the main differences between [openxlsx](https://github.com/awalker89/openxlsx) and [openxlsx2](https://github.com/JanMarvin/openxlsx2)?*\n\n### Introduction\n\nWithin this blog post, my aim is to elucidate the primary distinctions between [openxlsx](https://github.com/awalker89/openxlsx) and [openxlsx2](https://github.com/JanMarvin/openxlsx2). I've encountered these variances through a [Github Gist](https://gist.github.com/JanMarvin/a0d89bb8e128899477654dd2d4f4402d), the informative vignette titled [\"Update from openxlsx\"](https://janmarvin.github.io/openxlsx2/articles/Update-from-openxlsx.html), and my personal hands-on experience.\n\nThe provided tables are designed to offer a clear overview of the differences between openxlsx and openxlsx2. They serve as a concise presentation, illustrating the content of the vignette titled \"Update from openxlsx,\" which can be explored in detail [here](https://janmarvin.github.io/openxlsx2/articles/Update-from-openxlsx.html).\n\n### Chaining vs Piping\n\nIn contrast to openxlsx, openxlsx2 enables the creation of workbooks, the addition of styles, data writing, and other operations through the use of chained or piped operations.\n\nIf you lean towards utilizing pipes, please turn to the last column in the tables within the subsequent sections. This column specifies the corresponding function and its recommended usage with pipes. If the column is empty, it implies that the same function can be employed seamlessly with either pipes or chains.\n\nKindly explore [this specific vignette section](https://janmarvin.github.io/openxlsx2/articles/Update-from-openxlsx.html#styles) for an example that contrasts openxlsx and openxlsx2. Unlike openxlsx, which lacks integration with pipes or chains, openxlsx2 offers flexibility in its application.\n\n### Read an existing Excel Workbook\n\n\n::: {.cell tbl-cap='Create a workbook and write data'}\n\n:::\n\n::: {.cell tbl-cap='Read an existing Excel workbook' tbl-colwidths='[40,70,70,70]'}\n::: {.cell-output-display}\n|Action                  |openxlsx                        |openxlsx2 Chained        |openxlsx2 Piped |\n|:-----------------------|:-------------------------------|:------------------------|:---------------|\n|Read xlsx or xlsm files |                                |`wb_to_df(file = file)`  |                |\n|Read xlsx or xlsm files |`read.xlsx(xlsxFile = file)`    |`read_xlsx(file = file)` |                |\n|Read xlsx or xlsm files |`readWorkbook(xlsxFile = file)` |`wb_read(file = file)`   |                |\n:::\n:::\n\n\nPlease be aware that the recently introduced functions in openxlsx2, namely `read_xlsx()` and `wb_read()`, serve as mere wrappers for `wb_to_df()`. Their purpose is to facilitate a seamless transition between openxlsx and openxlsx2.\n\n### Write a file (xlsx or xlsm)\n\n\n::: {.cell tbl-cap='Write an xlsx or xlsm workbook'}\n\n:::\n\n::: {.cell tbl-cap='Write an xlsx or xlsm workbook' tbl-colwidths='[40,70,70,70]'}\n::: {.cell-output-display}\n|Action                       |openxlsx                                         |openxlsx2 Chained                                        |openxlsx2 Piped |\n|:----------------------------|:------------------------------------------------|:--------------------------------------------------------|:---------------|\n|Create a temporary xlsx file |`out <- temp_xlsx(name = \"myxlsx\")`              |`out2 <- temp_xlsx(name = \"myxlsx\")`                     |                |\n|Write a xlsx file            |`write.xlsx(my_df, file = out, colNames = TRUE)` |`write_xlsx(my_df, file = out2, col_names = TRUE)`       |                |\n|Create a temporary xlsm file |                                                 |`out2_xlsm <- temp_xlsx(name = \"myxlsm\", macros = TRUE)` |                |\n|Write a xlsm files           |                                                 |`write_xlsx(my_df, file = out2_xlsm, colNames = TRUE)`   |                |\n:::\n:::\n\n\n\n### Create an Excel Workbook from Scratch\n\n\n::: {.cell}\n\n:::\n\n::: {.cell tbl-cap='Create a workbook and write data' tbl-colwidths='[40,70,70,70]'}\n::: {.cell-output-display}\n|Action                |openxlsx                                                    |openxlsx2 Chained                      |openxlsx2 Piped                        |\n|:---------------------|:-----------------------------------------------------------|:--------------------------------------|:--------------------------------------|\n|Create a workbook     |`wb <- createWorkbook()`                                    |`wb <- wb_workbook()`                  |                                       |\n|Add a worksheet \"ws1\" |`ws1 <- addWorksheet(wb = wb, sheetName = \"ws1\")`           |`wb$add_worksheet(\"ws1\")`              |`wb_add_worksheet(\"ws1\")`              |\n|Add data to \"ws1\"     |`writeData(wb = wb, sheet = \"ws1\", x = cars, startCol = 2)` |`wb$add_data(x = cars, start_col = 2)` |`wb_add_data(x = cars, start_col = 2)` |\n:::\n:::\n\n\n\n### Add \n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}